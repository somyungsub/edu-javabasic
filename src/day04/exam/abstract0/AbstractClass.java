package day04.exam.abstract0;

/*
    추상클래스
    - 이론 자료 8장 p.5 ~ 7 참조
    - 구조 : 클래스 기본 구조 및 기능 + 미구현메서드(추상메서드) 1개 이상
    - 미구현메서드를 존재하게 하는 이유 -> 상속하는 하위클래스에서 추상메서드를 오버라이딩 강제
    - 오버라이딩이 되면 -> 동적바인딩이 이루어지고
    - 추상클래스로 인해 다형성을 강제화 시켜 활용 할 수 있게 해줍니다.
      기본 클래스 상속인 경우는 오버라이딩을 해도 되고 안해도 되는 자율성이 있지만,
      추상 클래스 상속인 경우는 추상메서드를 오버라이딩하게 끔 하는 강제성이 있습니다.
    - 추상메서드가 1개라도 존재하면 추상클래스 입니다. 단 1개라도 그 메서드는 구현 대상입니다.
    - 또한 이런 추상클래스는 new를 통해 객체생성이 불가능합니다. 구현 방법은 있으나 결과적으로는 추상메서드를 구현해야 하고 복잡해집니다.
      불가능한 이유 : 간단하게 클래스가 생성 될 때 메서드가 구현이 안되어 있다면?? 안되겠죠 ? 그래서 객체 생성이 불가능합니다.
      그렇다면.. 객체생성을 가능하게 만드는 방법?? -> 추상메서드를 구현하면 되겠죠? new로 객체생성과 동시에 추상메서드를 구현하는 방식이 있긴 합니다.

    일반지정자 abstract 사용 -> 클래스와 메서드에 사용가능
 */
public abstract class AbstractClass {
//    private abstract int a; // 문법 에러 발생 (여기서는 사용이 허용안된다고 나옴)

    private String name;
    private int age;

    // 메서드의 abstract 나 클래스의 abstract를 지우면 에러가 발생합니다. 꼭 확인 해보시기 바랍니다.
    public abstract void testOverride();    // 추상메서드를 만들면 무조건

    public void test() {
        System.out.println("나는 상위클래스 AbstractClass에서 구현한 day05.test 메서드!");
        System.out.println("추상메서드는 구현이 안되어 있고 정의만 해놓음 -> 하위에서 저 구조대로 구현을 하게 한다!(오버라이딩)");
    }

}
